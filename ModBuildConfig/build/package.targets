<Project>
	<!-- Mod build config setup start -->
	<UsingTask TaskName="Nickel.ModBuildConfig.DeployModTask" AssemblyFile="Nickel.ModBuildConfig.dll" />
	
	<!-- Set build options -->
	<PropertyGroup>
		<!-- Enable line numbers in stack traces (needs to embedded for Linux/macOS: https://github.com/dotnet/runtime/issues/39987) -->
		<DebugSymbols>true</DebugSymbols>
		<DebugType>embedded</DebugType>

		<!-- Don't create the 'refs' folder (which isn't useful for mods) -->
		<ProduceReferenceAssembly>false</ProduceReferenceAssembly>

		<!-- Suppress processor architecture mismatch warning (mods should be compiled in 'Any CPU' so they work in both 32-bit and 64-bit mode) -->
		<ResolveAssemblyWarnOrErrorOnTargetArchitectureMismatch>None</ResolveAssemblyWarnOrErrorOnTargetArchitectureMismatch>

		<!-- Copy referenced DLLs into build output -->
		<CopyLocalLockFileAssemblies>true</CopyLocalLockFileAssemblies>

		<!-- Constants -->
		<_GameName>Cobalt Core</_GameName>
		<_GameSteamID>2179850</_GameSteamID>
		<_ModLoaderName>Nickel</_ModLoaderName>

		<!-- Remember user-provided settings -->
		<HasUserModLoaderPath>false</HasUserModLoaderPath>
		<HasUserModLoaderPath Condition="'$(ModLoaderPath)' != ''">true</HasUserModLoaderPath>
		<HasUserGameDllPath>false</HasUserGameDllPath>
		<HasUserGameDllPath Condition="'$(GameDllPath)' != ''">true</HasUserGameDllPath>
		<HasUserGameExePath>false</HasUserGameExePath>
		<HasUserGameExePath Condition="'$(GameExePath)' != ''">true</HasUserGameExePath>
		<HasUserEnableDllExtract>false</HasUserEnableDllExtract>
		<HasUserEnableDllExtract Condition="'$(EnableDllExtract)' != ''">true</HasUserEnableDllExtract>

		<!-- Default settings that don't care about paths -->
		<ModName Condition="'$(ModName)' == ''">$(MSBuildProjectName)</ModName>
		<ModVersion Condition="'$(ModVersion)' == ''">$(Version)</ModVersion>
		<IsLegacyMod Condition="'$(IsLegacyMod)' == ''">false</IsLegacyMod>
		<ModZipPath Condition="'$(ModZipPath)' == ''">$(MSBuildProjectDirectory)\release\$(ModName)-$(Version).zip</ModZipPath>
		<EnableModDeploy Condition="'$(EnableModDeploy)' == ''">true</EnableModDeploy>
		<EnableModZip Condition="'$(EnableModZip)' == '' And '$(Configuration)' == 'Release'">true</EnableModZip>
		<EnableModZip Condition="'$(EnableModZip)' == ''">false</EnableModZip>
		<IncludedModProjectPaths Condition="'$(IncludedModProjectPaths)' == ''"></IncludedModProjectPaths>
		<EnableGameDebugging Condition="'$(EnableGameDebugging)' == ''">true</EnableGameDebugging>
		<IgnoreAccessChecks>true</IgnoreAccessChecks>
	</PropertyGroup>

	<!-- Trying to find the game path - needed if ModLoaderPath, GameDllPath or GameExePath is not set -->
	<PropertyGroup Condition="$(OS) == 'Unix' OR $(OS) == 'OSX'">
		<!-- Linux -->
		<_GamePath Condition="'$(_GamePath)' == '' Or !Exists('$(_GamePath)')">$(HOME)/.steam/steam/steamapps/common/$(_GameName)</_GamePath>
		<_GamePath Condition="'$(_GamePath)' == '' Or !Exists('$(_GamePath)')">$(HOME)/.local/share/Steam/steamapps/common/$(_GameName)</_GamePath>
		<_GamePath Condition="'$(_GamePath)' == '' Or !Exists('$(_GamePath)')">$(HOME)/.var/app/com.valvesoftware.Steam/data/Steam/steamapps/common/$(_GameName)</_GamePath>

		<!-- macOS (may be 'Unix' or 'OSX') -->
		<_GamePath Condition="'$(_GamePath)' == '' Or !Exists('$(_GamePath)')">$(HOME)/Library/Application Support/Steam/steamapps/common/$(_GameName)/Contents/MacOS</_GamePath>
	</PropertyGroup>
	<PropertyGroup Condition="$(OS) == 'Windows_NT'">
		<!-- Registry path -->
		<_GamePath Condition="'$(_GamePath)' == '' Or !Exists('$(_GamePath)')">$([MSBuild]::GetRegistryValueFromView('HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\Steam App $(_GameSteamID)', 'InstallLocation', null, RegistryView.Registry64, RegistryView.Registry32))</_GamePath>

		<!-- Derive from Steam library path -->
		<_SteamLibraryPath>$([MSBuild]::GetRegistryValueFromView('HKEY_CURRENT_USER\SOFTWARE\Valve\Steam', 'SteamPath', null, RegistryView.Registry32))</_SteamLibraryPath>
		<_GamePath Condition="'$(_GamePath)' == '' Or !Exists('$(_GamePath)')">$(_SteamLibraryPath)\steamapps\common\$(_GameName)</_GamePath>

		<!-- Steam paths -->
		<_GamePath Condition="'$(_GamePath)' == '' Or !Exists('$(_GamePath)')">C:\Program Files\Steam\steamapps\common\$(_GameName)</_GamePath>
		<_GamePath Condition="'$(_GamePath)' == '' Or !Exists('$(_GamePath)')">C:\Program Files (x86)\Steam\steamapps\common\$(_GameName)</_GamePath>
	</PropertyGroup>

	<!-- Trying to set ModLoaderPath, GameDllPath and GameExePath based on the found game path -->
	<PropertyGroup Condition="Exists('$(_GamePath)')">
		<GameExePath Condition="!'$(HasUserGameExePath)' And !Exists('$(GameExePath)')">$(_GamePath)\CobaltCore.exe</GameExePath>

		<ModLoaderPath Condition="!'$(HasUserModLoaderPath)' And !Exists('$(ModLoaderPath)\$(_ModLoaderName).dll')">$(_GamePath)\$(_ModLoaderName)</ModLoaderPath>
		<ModLoaderPath Condition="!'$(HasUserModLoaderPath)' And !Exists('$(ModLoaderPath)\$(_ModLoaderName).dll')">$(_GamePath)</ModLoaderPath>

		<GameDllPath Condition="!'$(HasUserGameDllPath)' And !Exists('$(GameDllPath)')">$(_GamePath)\CobaltCore.dll</GameDllPath>
	</PropertyGroup>

	<!-- Trying to set ModLoaderPath if it's still missing -->
	<PropertyGroup>
		<ModLoaderPath Condition="!'$(HasUserModLoaderPath)' And !Exists('$(ModLoaderPath)\$(_ModLoaderName).dll')">$(USERPROFILE)\$(_ModLoaderName)</ModLoaderPath>
		<ModLoaderPath Condition="!'$(HasUserModLoaderPath)' And !Exists('$(ModLoaderPath)\$(_ModLoaderName).dll')">$(HOME)\$(_ModLoaderName)</ModLoaderPath>
		<ModLoaderPath Condition="!'$(HasUserModLoaderPath)' And !Exists('$(ModLoaderPath)\$(_ModLoaderName).dll')">$(AppData)\$(_ModLoaderName)</ModLoaderPath>
		<ModLoaderPath Condition="!'$(HasUserModLoaderPath)' And !Exists('$(ModLoaderPath)\$(_ModLoaderName).dll')">$(AppData)\CobaltCore\$(_ModLoaderName)</ModLoaderPath>
		<ModLoaderPath Condition="!'$(HasUserModLoaderPath)' And !Exists('$(ModLoaderPath)\$(_ModLoaderName).dll')">$(AppData)\$(_ModLoaderName)</ModLoaderPath>
		<ModLoaderPath Condition="!'$(HasUserModLoaderPath)' And !Exists('$(ModLoaderPath)\$(_ModLoaderName).dll')">$(USERPROFILE)\Downloads\$(_ModLoaderName)</ModLoaderPath>
		<ModLoaderPath Condition="!'$(HasUserModLoaderPath)' And !Exists('$(ModLoaderPath)\$(_ModLoaderName).dll')">$(HOME)\Downloads\$(_ModLoaderName)</ModLoaderPath>
	</PropertyGroup>

	<!-- trying to set GameDllPath if it's still missing and we have ModLoaderPath -->
	<PropertyGroup Condition="Exists('$(ModLoaderPath)\$(_ModLoaderName).dll')">
		<GameDllPath Condition="!'$(HasUserGameDllPath)' And !Exists('$(GameDllPath)')">$(ModLoaderPath)\CobaltCore.dll</GameDllPath>
		<EnableDllExtract Condition="Exists('$(GameExePath)') And !'$(HasUserEnableDllExtract)'">true</EnableDllExtract>
	</PropertyGroup>

	<!-- default settings that do care about paths -->
	<PropertyGroup>
		<ModDeployModsPath Condition="'$(ModDeployModsPath)' == ''">$(ModLoaderPath)\ModLibrary</ModDeployModsPath>
		<EnableDllExtract Condition="'$(EnableDllExtract)' == '' And Exists('$(GameExePath)')">true</EnableDllExtract>
		<EnableDllExtract Condition="'$(EnableDllExtract)' == '' And !Exists('$(GameDllPath)')">true</EnableDllExtract>
		<EnableDllExtract Condition="'$(EnableDllExtract)' == ''">false</EnableDllExtract>
	</PropertyGroup>

	<Target Name="ValidateProperties" BeforeTargets="CoreCompile">
		<!-- validation -->
		<Error Condition="'$(OS)' != 'OSX' AND '$(OS)' != 'Unix' AND '$(OS)' != 'Windows_NT'" Text="The mod build package doesn't recognize OS type '$(OS)'." />
		<Error Condition="!Exists('$(ModLoaderPath)\$(_ModLoaderName).dll')" Text="The mod build package can't find the mod loader. You can specify where to find it with the `ModLoaderPath` build property." ContinueOnError="false" />
		<Error Condition="'$(EnableDllExtract)' And !Exists('$(GameExePath)') " Text="The mod build package can't find the game EXE. You can specify where to find it with the `GameExePath` build property." ContinueOnError="false" />
		<Error Condition="!'$(EnableDllExtract)' And !Exists('$(GameDllPath)')" Text="The mod build package can't find the extracted game DLL. You can specify where to find it with the `GameDllPath` build property." ContinueOnError="false" />
		<Error Condition="'$(EnableModDeploy)' And !Exists('$(ModDeployModsPath)')" Text="The mod build package can't find the mods folder for deploying purposes. You can specify where to find it with the `ModDeployModsPath` build property." ContinueOnError="false" />
		<Warning Condition="'$(Platform)' != 'AnyCPU'" Text="The target platform should be set to 'Any CPU' for compatibility with both 32-bit and 64-bit versions of the game (currently set to '$(Platform)')." />

		<!-- confirmation messages -->
		<Message Importance="high" Text="ModBuildConfig: EnableDllExtract = $(EnableDllExtract)" />
		<Message Importance="high" Text="ModBuildConfig: EnableModDeploy = $(EnableModDeploy)" />
		<Message Importance="high" Condition="'$(EnableDllExtract)'" Text="ModBuildConfig: GameExePath = '$(GameExePath)'" />
		<Message Importance="high" Text="ModBuildConfig: GameDllPath = '$(GameDllPath)'" />
		<Message Importance="high" Condition="'$(EnableModDeploy)'" Text="ModBuildConfig: ModDeployModsPath = '$(ModDeployModsPath)'" />
	</Target>

	<Target Name="ExtractGameDllTarget" BeforeTargets="PublicizeGameDll" Condition="$(EnableDllExtract)">
		<ExtractSingleFileApplicationResourceTask ExeInputPath="$(GameExePath)" ResourceName="CobaltCore.dll" ResourceOutputPath="$(GameDllPath)" />
	</Target>
	
	<Target Name="PublicizeGameDll" BeforeTargets="PrepareForBuild">
		<Fayti1703.AssemblyTasks.PublishAllTypes
			SourceFilePath="$(GameDllPath)"
			TargetFilePath="$(IntermediateOutputPath)/CobaltCore.dll"
		/>
	</Target>

	<!-- Add assembly references -->
	<ItemGroup>
		<Reference Include="CobaltCore" Private="False" HintPath="$(IntermediateOutputPath)/CobaltCore.dll" />
		<Reference Include="MonoGame.Framework" Private="False" HintPath="$(ModLoaderPath)\MonoGame.Framework.dll" />
		<Reference Include="Newtonsoft.Json" Private="False" HintPath="$(ModLoaderPath)\Newtonsoft.Json.dll" />
		<Reference Condition="!$(IsLegacyMod)" Include="0Harmony" Private="False" HintPath="$(ModLoaderPath)\0Harmony.dll" />
		<Reference Condition="!$(IsLegacyMod)" Include="Microsoft.Extensions.Logging.Abstractions" Private="False" HintPath="$(ModLoaderPath)\Microsoft.Extensions.Logging.Abstractions.dll" />
		<Reference Condition="!$(IsLegacyMod)" Include="$(_ModLoaderName)Common" Private="False" HintPath="$(ModLoaderPath)\$(_ModLoaderName)Common.dll" />
		<Reference Condition="!$(IsLegacyMod)" Include="$(_ModLoaderName)" Private="False" HintPath="$(ModLoaderPath)\$(_ModLoaderName).dll" />
		<Reference Condition="!$(IsLegacyMod)" Include="PluginManager" Private="False" HintPath="$(ModLoaderPath)\PluginManager.dll" />
		<Reference Condition="!$(IsLegacyMod)" Include="PluginManager.Cecil" Private="False" HintPath="$(ModLoaderPath)\PluginManager.Cecil.dll" />
		<Reference Condition="!$(IsLegacyMod)" Include="Shrike" Private="False" HintPath="$(ModLoaderPath)\Shrike.dll" />
		<Reference Condition="!$(IsLegacyMod)" Include="Shrike.Harmony" Private="False" HintPath="$(ModLoaderPath)\Shrike.Harmony.dll" />
		<Reference Condition="!$(IsLegacyMod)" Include="OneOf" Private="False" HintPath="$(ModLoaderPath)\OneOf.dll" />
		<Reference Condition="$(IsLegacyMod)" Include="CobaltCoreModding.Definitions" Private="False" HintPath="$(ModDeployModsPath)\Nickel.Legacy\CobaltCoreModding.Definitions.dll" />
	</ItemGroup>

	<!-- Enable game debugging -->
	<PropertyGroup Condition="'$(OS)' == 'Windows_NT' AND '$(EnableGameDebugging)'">
		<StartAction>Program</StartAction>
		<StartProgram>$(ModLoaderPath)\Nickel.exe</StartProgram>
		<StartWorkingDirectory>$(ModLoaderPath)</StartWorkingDirectory>
	</PropertyGroup>

	<!-- Deploy mod files & create release ZIP -->
	<Target Name="ModDeployAndZip" AfterTargets="Build">
		<Nickel.ModBuildConfig.DeployModTask
				ModName="$(ModName)"
				ModVersion="$(ModVersion)"
				IsLegacyMod="$(IsLegacyMod)"
				ProjectDir="$(ProjectDir)"
				TargetDir="$(TargetDir)"
				EnableModDeploy="$(EnableModDeploy)"
				ModDeployModsPath="$(ModDeployModsPath)"
				EnableModZip="$(EnableModZip)"
				ModZipPath="$(ModZipPath)"
				IncludedModProjectPaths="$(IncludedModProjectPaths)"
		/>
	</Target>
</Project>